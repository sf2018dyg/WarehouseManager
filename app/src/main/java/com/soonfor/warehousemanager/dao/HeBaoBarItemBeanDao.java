package com.soonfor.warehousemanager.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.soonfor.warehousemanager.module.instore.beans.hebao.HeBaoBarItemBean;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "HeBaoBarItemBean".
*/
public class HeBaoBarItemBeanDao extends AbstractDao<HeBaoBarItemBean, String> {

    public static final String TABLENAME = "HeBaoBarItemBean";

    /**
     * Properties of entity HeBaoBarItemBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property FBarCode = new Property(0, String.class, "fBarCode", true, "fBarCode");
        public final static Property FOrdNo = new Property(1, String.class, "fOrdNo", false, "fOrdNo");
        public final static Property FPackNo = new Property(2, String.class, "fPackNo", false, "fPackNo");
        public final static Property FSPCode = new Property(3, String.class, "fSPCode", false, "fSPCode");
        public final static Property FSPName = new Property(4, String.class, "fSPName", false, "fSPName");
        public final static Property FSPSizeDesc = new Property(5, String.class, "fSPSizeDesc", false, "fSPSizeDesc");
        public final static Property FStkCode = new Property(6, String.class, "fStkCode", false, "fStkCode");
        public final static Property FStkName = new Property(7, String.class, "fStkName", false, "fStkName");
        public final static Property FPlaceCode = new Property(8, String.class, "fPlaceCode", false, "fPlaceCode");
        public final static Property FPlaceName = new Property(9, String.class, "fPlaceName", false, "fPlaceName");
        public final static Property FCtnL = new Property(10, String.class, "fCtnL", false, "fCtnL");
        public final static Property FCtnW = new Property(11, String.class, "fCtnW", false, "fCtnW");
        public final static Property FCtnH = new Property(12, String.class, "fCtnH", false, "fCtnH");
        public final static Property FOutCuft = new Property(13, String.class, "fOutCuft", false, "fOutCuft");
        public final static Property FPackCtn = new Property(14, String.class, "fPackCtn", false, "fPackCtn");
        public final static Property FScanorID = new Property(15, String.class, "fScanorID", false, "fScanorID");
        public final static Property FScanor = new Property(16, String.class, "fScanor", false, "fScanor");
        public final static Property FScanDate = new Property(17, String.class, "fScanDate", false, "fScanDate");
        public final static Property FOrdSpID = new Property(18, String.class, "fOrdSpID", false, "fOrdSpID");
    }


    public HeBaoBarItemBeanDao(DaoConfig config) {
        super(config);
    }
    
    public HeBaoBarItemBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"HeBaoBarItemBean\" (" + //
                "\"fBarCode\" TEXT PRIMARY KEY NOT NULL ," + // 0: fBarCode
                "\"fOrdNo\" TEXT," + // 1: fOrdNo
                "\"fPackNo\" TEXT," + // 2: fPackNo
                "\"fSPCode\" TEXT," + // 3: fSPCode
                "\"fSPName\" TEXT," + // 4: fSPName
                "\"fSPSizeDesc\" TEXT," + // 5: fSPSizeDesc
                "\"fStkCode\" TEXT," + // 6: fStkCode
                "\"fStkName\" TEXT," + // 7: fStkName
                "\"fPlaceCode\" TEXT," + // 8: fPlaceCode
                "\"fPlaceName\" TEXT," + // 9: fPlaceName
                "\"fCtnL\" TEXT," + // 10: fCtnL
                "\"fCtnW\" TEXT," + // 11: fCtnW
                "\"fCtnH\" TEXT," + // 12: fCtnH
                "\"fOutCuft\" TEXT," + // 13: fOutCuft
                "\"fPackCtn\" TEXT," + // 14: fPackCtn
                "\"fScanorID\" TEXT," + // 15: fScanorID
                "\"fScanor\" TEXT," + // 16: fScanor
                "\"fScanDate\" TEXT," + // 17: fScanDate
                "\"fOrdSpID\" TEXT);"); // 18: fOrdSpID
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"HeBaoBarItemBean\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, HeBaoBarItemBean entity) {
        stmt.clearBindings();
 
        String fBarCode = entity.getFBarCode();
        if (fBarCode != null) {
            stmt.bindString(1, fBarCode);
        }
 
        String fOrdNo = entity.getFOrdNo();
        if (fOrdNo != null) {
            stmt.bindString(2, fOrdNo);
        }
 
        String fPackNo = entity.getFPackNo();
        if (fPackNo != null) {
            stmt.bindString(3, fPackNo);
        }
 
        String fSPCode = entity.getFSPCode();
        if (fSPCode != null) {
            stmt.bindString(4, fSPCode);
        }
 
        String fSPName = entity.getFSPName();
        if (fSPName != null) {
            stmt.bindString(5, fSPName);
        }
 
        String fSPSizeDesc = entity.getFSPSizeDesc();
        if (fSPSizeDesc != null) {
            stmt.bindString(6, fSPSizeDesc);
        }
 
        String fStkCode = entity.getFStkCode();
        if (fStkCode != null) {
            stmt.bindString(7, fStkCode);
        }
 
        String fStkName = entity.getFStkName();
        if (fStkName != null) {
            stmt.bindString(8, fStkName);
        }
 
        String fPlaceCode = entity.getFPlaceCode();
        if (fPlaceCode != null) {
            stmt.bindString(9, fPlaceCode);
        }
 
        String fPlaceName = entity.getFPlaceName();
        if (fPlaceName != null) {
            stmt.bindString(10, fPlaceName);
        }
 
        String fCtnL = entity.getFCtnL();
        if (fCtnL != null) {
            stmt.bindString(11, fCtnL);
        }
 
        String fCtnW = entity.getFCtnW();
        if (fCtnW != null) {
            stmt.bindString(12, fCtnW);
        }
 
        String fCtnH = entity.getFCtnH();
        if (fCtnH != null) {
            stmt.bindString(13, fCtnH);
        }
 
        String fOutCuft = entity.getFOutCuft();
        if (fOutCuft != null) {
            stmt.bindString(14, fOutCuft);
        }
 
        String fPackCtn = entity.getFPackCtn();
        if (fPackCtn != null) {
            stmt.bindString(15, fPackCtn);
        }
 
        String fScanorID = entity.getFScanorID();
        if (fScanorID != null) {
            stmt.bindString(16, fScanorID);
        }
 
        String fScanor = entity.getFScanor();
        if (fScanor != null) {
            stmt.bindString(17, fScanor);
        }
 
        String fScanDate = entity.getFScanDate();
        if (fScanDate != null) {
            stmt.bindString(18, fScanDate);
        }
 
        String fOrdSpID = entity.getFOrdSpID();
        if (fOrdSpID != null) {
            stmt.bindString(19, fOrdSpID);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, HeBaoBarItemBean entity) {
        stmt.clearBindings();
 
        String fBarCode = entity.getFBarCode();
        if (fBarCode != null) {
            stmt.bindString(1, fBarCode);
        }
 
        String fOrdNo = entity.getFOrdNo();
        if (fOrdNo != null) {
            stmt.bindString(2, fOrdNo);
        }
 
        String fPackNo = entity.getFPackNo();
        if (fPackNo != null) {
            stmt.bindString(3, fPackNo);
        }
 
        String fSPCode = entity.getFSPCode();
        if (fSPCode != null) {
            stmt.bindString(4, fSPCode);
        }
 
        String fSPName = entity.getFSPName();
        if (fSPName != null) {
            stmt.bindString(5, fSPName);
        }
 
        String fSPSizeDesc = entity.getFSPSizeDesc();
        if (fSPSizeDesc != null) {
            stmt.bindString(6, fSPSizeDesc);
        }
 
        String fStkCode = entity.getFStkCode();
        if (fStkCode != null) {
            stmt.bindString(7, fStkCode);
        }
 
        String fStkName = entity.getFStkName();
        if (fStkName != null) {
            stmt.bindString(8, fStkName);
        }
 
        String fPlaceCode = entity.getFPlaceCode();
        if (fPlaceCode != null) {
            stmt.bindString(9, fPlaceCode);
        }
 
        String fPlaceName = entity.getFPlaceName();
        if (fPlaceName != null) {
            stmt.bindString(10, fPlaceName);
        }
 
        String fCtnL = entity.getFCtnL();
        if (fCtnL != null) {
            stmt.bindString(11, fCtnL);
        }
 
        String fCtnW = entity.getFCtnW();
        if (fCtnW != null) {
            stmt.bindString(12, fCtnW);
        }
 
        String fCtnH = entity.getFCtnH();
        if (fCtnH != null) {
            stmt.bindString(13, fCtnH);
        }
 
        String fOutCuft = entity.getFOutCuft();
        if (fOutCuft != null) {
            stmt.bindString(14, fOutCuft);
        }
 
        String fPackCtn = entity.getFPackCtn();
        if (fPackCtn != null) {
            stmt.bindString(15, fPackCtn);
        }
 
        String fScanorID = entity.getFScanorID();
        if (fScanorID != null) {
            stmt.bindString(16, fScanorID);
        }
 
        String fScanor = entity.getFScanor();
        if (fScanor != null) {
            stmt.bindString(17, fScanor);
        }
 
        String fScanDate = entity.getFScanDate();
        if (fScanDate != null) {
            stmt.bindString(18, fScanDate);
        }
 
        String fOrdSpID = entity.getFOrdSpID();
        if (fOrdSpID != null) {
            stmt.bindString(19, fOrdSpID);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public HeBaoBarItemBean readEntity(Cursor cursor, int offset) {
        HeBaoBarItemBean entity = new HeBaoBarItemBean( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // fBarCode
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // fOrdNo
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // fPackNo
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // fSPCode
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // fSPName
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // fSPSizeDesc
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // fStkCode
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // fStkName
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // fPlaceCode
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // fPlaceName
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // fCtnL
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // fCtnW
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // fCtnH
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // fOutCuft
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // fPackCtn
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // fScanorID
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // fScanor
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // fScanDate
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18) // fOrdSpID
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, HeBaoBarItemBean entity, int offset) {
        entity.setFBarCode(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setFOrdNo(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setFPackNo(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setFSPCode(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setFSPName(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setFSPSizeDesc(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setFStkCode(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setFStkName(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setFPlaceCode(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setFPlaceName(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setFCtnL(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setFCtnW(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setFCtnH(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setFOutCuft(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setFPackCtn(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setFScanorID(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setFScanor(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setFScanDate(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setFOrdSpID(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
     }
    
    @Override
    protected final String updateKeyAfterInsert(HeBaoBarItemBean entity, long rowId) {
        return entity.getFBarCode();
    }
    
    @Override
    public String getKey(HeBaoBarItemBean entity) {
        if(entity != null) {
            return entity.getFBarCode();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(HeBaoBarItemBean entity) {
        return entity.getFBarCode() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
